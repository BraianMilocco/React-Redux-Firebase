{"version":3,"sources":["components/layout/SignInLinks.js","store/actions/authActions.js","components/layout/SingOutLinks.js","components/layout/NavBar.js","components/dashboard/Notifications.js","components/projects/ProjectSumary.js","components/projects/ProjectList.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignUp.js","components/auth/SigIn.js","components/projects/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","props","className","to","onClick","profile","initials","SignOutLinks","state","console","log","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSumary","project","title","authorLastName","authorFirstName","createdAt","calendar","ProjectList","projects","proj","Dashboard","this","Component","compose","firestoreConnect","collection","orderBy","limit","firestore","ordered","ownProps","match","params","data","SignUp","email","password","firstName","lastName","handleChange","e","setState","target","value","handleSubmit","preventDefault","signUp","authError","onSubmit","htmlFor","onChange","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","catch","err","SignIn","signIn","creds","credentials","signInWithEmailAndPassword","CreateProject","history","push","userID","add","authorId","Date","createProject","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","reactReduxFirebase","useFirestoreForProfile","userProfile","attachAuthIsReady","firebaseAuthIsReady","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.da75f859.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { signOut } from '../../store/actions/authActions';\n\nconst SignInLinks= (props)=>{\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/create\">New Project</NavLink></li>\n            <li><a onClick={props.signOut}>LogOut</a></li>\n            <li><NavLink to=\"/\" className=\"btn btn-floating pink lighten-1\" >{props.profile.initials}</NavLink></li>\n            \n        </ul>\n    )\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return{\n        signOut: ()=> dispatch(signOut())\n    }\n}\n\nexport default connect(null, mapDispatchToProps)(SignInLinks)","export const signIn= (credentials)=>{\n    return (dispatch, getState, {getFirebase})=>{\n        const firebase= getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then( \n            () =>{\n                dispatch({type: 'LOGIN_SUCCESS'})\n            }\n        ).catch(\n            (err)=>{\n                dispatch({type: 'LOGIN_ERROR', err: err})\n            }\n        )\n    }\n}\n\nexport const signOut= ()=>{\n    return (dispatch, getState, {getFirebase})=>{\n        const firebase= getFirebase();\n\n        firebase.auth().signOut().then(\n            ()=> dispatch({type: 'SIGNOUT_SUCCESS'})\n        );\n    }\n}\n\nexport const signUp= (newUser)=>{\n    return (dispatch, getState, {getFirebase, getFirestore})=>{\n        const firebase= getFirebase();\n        const firestore= getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email, newUser.password\n        ).then(\n            (resp)=>{\n                return firestore.collection('users').doc(resp.user.uid).set(\n                    {\n                        firstName: newUser.firstName,\n                        lastName: newUser.lastName,\n                        initials: newUser.firstName[0] + newUser.lastName[0]\n                    }\n                )\n            }\n        ).then(\n            ()=>{\n                dispatch({type: 'SIGNUP_SUCCESS'})\n            }\n        ).catch((err)=>{\n                dispatch({type: 'SIGNUP_ERROR', err:err})\n            }\n        )\n    }\n}","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst  SignOutLinks= ()=>{\n    return(\n        <ul className=\"right\">\n            <li><NavLink to=\"/signup\">SignUp</NavLink></li>\n            <li><NavLink to=\"/signin\">Login</NavLink></li>\n        </ul>\n    )\n}\n\nexport default SignOutLinks","import React from 'react';\nimport { Link } from 'react-router-dom';\nimport SignInLinks from './SignInLinks';\nimport SignOutLinks from './SingOutLinks';\nimport { connect } from 'react-redux';\n\nconst NavBar= (props)=>{\n    const { auth, profile }= props;\n    const links= auth.uid ?  <SignInLinks profile={profile}/> : <SignOutLinks />;\n\n    return(\n        <nav className=\"nav-wrapper grey darken-3\">\n            <div className=\"container\">\n                <Link to=\"/\" className=\"brand-logo left\">MarioPlan </Link>\n                {links}\n            </div>\n        </nav>\n    )\n}\n\nconst mapStateToProps= (state)=>{\n    console.log(state);\n    return {\n        auth: state.firebase.auth,\n        profile: state.firebase.profile\n    }\n}\n\nexport default connect(mapStateToProps)(NavBar)","import React from 'react';\nimport moment from 'moment';\n\nconst Notifications= (props)=>{\n    const {notifications}= props;\n    return(\n        <div className=\"section\">\n            <div className=\"card z-depth-0\">\n                <div className=\"card-content\">\n                    <span className=\"card-title\">Notifications</span>\n                    <ul className=\"notifications\">\n                        {notifications && notifications.map(item=>{\n                            return (\n                                <li key={item.id}>\n                                    <span className=\"pink-text\"> {item.user}  </span>\n                                    <span>{item.content}</span>\n                                    <div className=\"grey-text note-date\">\n                                        {moment(item.time.toDate()).fromNow()}\n                                    </div>\n                                </li>\n                            )\n                        })}\n                    </ul>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Notifications;","import React from 'react';\nimport  moment  from 'moment';\n\nconst ProjectSumary= ({project})=>{\n    return(\n        <div className=\"card z-depth-0 project-summary \">\n            <div className=\"card-content  grey-text text-darken-3\">\n                <span className=\"card-title\">{project.title}</span>\n                <p>Posted by {project.authorLastName} {project.authorFirstName} </p>\n                <p className=\"grey-text\">{ moment(project.createdAt.toDate()).calendar() }</p>\n            </div>\n        </div>\n    )\n}\n\nexport default ProjectSumary;","import React from 'react';\nimport ProjectSumary from '../projects/ProjectSumary';\nimport { Link } from 'react-router-dom';\n\nconst ProjectList = ({projects}) =>{\n\n    const proj= projects ? (projects.map(\n            project=> {\n                \n                return(\n                    <Link to={'/project/' + project.id } key={project.id} > \n                        <ProjectSumary project={project} />\n                    </Link>\n                )\n            }\n        )\n    ) : ( <div> No hay Proyectos</div> )\n\n    return(\n        <div className=\"project-list section \">\n            { proj }\n        </div>\n    )\n}\n\nexport default ProjectList;","import React, { Component } from 'react';\nimport Notifications from './Notifications';\nimport ProjectList from '../projects/ProjectList';\nimport { connect } from 'react-redux';\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\n\nclass Dashboard extends Component{\n\n    render(){\n       // console.log(this.props);\n        const  {projects, auth, notifications}  = this.props;\n\n        if (!auth.uid) return <Redirect to='/signin' />\n         \n        return(\n            <div className=\"dashboard container\">\n                <div className=\"row\">\n                    <div className=\"col s-12 m-6\">\n                        <ProjectList projects={projects }/>\n                    </div>\n                    <div className=\"col s-12 m-5 offset-m1\">\n                        <Notifications notifications={notifications}/>\n                    </div>\n                </div>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        projects: state.firestore.ordered.projects,\n        auth: state.firebase.auth,\n        notifications: state.firestore.ordered.notifications,\n    }\n}\n\n\nexport default compose(\n    firestoreConnect(\n        [{ collection: 'projects' , orderBy: ['createdAt', 'desc'], limit: 3 },\n         { collection: 'notifications', orderBy: ['time', 'desc'], limit: 5}   \n        ]),\n    connect(mapStateToProps)\n)(Dashboard);","import React from 'react'\nimport {connect} from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase';\nimport { compose } from 'redux';\nimport { Redirect } from 'react-router-dom';\nimport moment from 'moment'\n\nconst ProjectDetails = (props)=> {\n    const {project, auth} = props;\n    if (!auth.uid) return <Redirect to='/signin' />;\n\n    if (project){\n        return(\n            <div className=\"container sextion project-details\" key={project.id}>\n                <div className=\"card z-depth-0\">\n                    <div className=\"card-content\">\n                        <span className=\"card-title\"> { project.title } </span>\n                        <p> { project.content } </p>\n                    </div>\n                    <div className=\"card-action grey lighten-4 grey-text\">\n                        <div>Posted By {project.authorFirstName} {project.authorLastName} </div>\n                        <div>  {moment(project.createdAt.toDate()).calendar()}</div>\n                    </div>\n                </div>\n            </div>\n        )\n    }else {\n        return(\n            <div className=\"container center\"> <p>Cargando</p> </div>\n        )\n    }\n\n}\n\n\n\nconst mapStateToProps= (state, ownProps)=>{\n    const id= ownProps.match.params.id;\n    const projects= state.firestore.data.projects;\n    const project= projects ? projects[id] : null;\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStateToProps),\n    firestoreConnect([\n        { collection: 'projects'}\n    ])\n)(ProjectDetails)","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state={\n        email: '',\n        password: '',\n        firstName: '',\n        lastName: ''\n    }\n\n    handleChange= (e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        });\n    }\n    handleSubmit= (e)=>{\n        e.preventDefault();\n        this.props.signUp(this.state);\n    }\n    render() {\n        const {auth, authError}= this.props;\n        if (auth.uid) return <Redirect to='/' />;\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\"> Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\"> First Name </label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\"> Last Name </label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\"> Email </label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\"> Password </label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            {authError? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps= (state)=>{\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps= (dispatch)=>{\n    return{\n        signUp: (newUser)=> dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp) \n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions'\nimport { Redirect } from 'react-router-dom'\n\n\nclass SignIn extends Component {\n    state={\n        email: '',\n        password: ''\n    }\n\n    handleChange= (e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit= (e)=>{\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const {authError, auth}= this.props;\n        if (auth.uid) return <Redirect to='/' />;\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\"> Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\"> Email </label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\"> Password </label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            {authError ? <p>{authError}</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps= (state)=>{\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps=(dispatch)=>{\n    return {\n        signIn: (creds)=> dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn) ","import React, { Component } from 'react';\nimport {connect} from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport {createProject} from '../../store/actions/projectActions';\n\nclass CreateProject extends Component {\n    state={\n        title: '',\n        content: ''\n    }\n\n    handleChange= (e)=>{\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit= (e)=>{\n        e.preventDefault();\n        this.props.CreateProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const {auth}= this.props;\n        if (!auth.uid) return <Redirect to='/signin' />;\n\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\"> Create new Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\"> Title </label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange}/>\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\"> Content </label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\n                       \n                    </div>\n                    <div className=\"input-field\">\n                        <button  className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state)=>{\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps= (dispatch)=>{\n    return {\n        CreateProject: (project)=> dispatch(createProject(project))\n        \n    }\n}\n\n//paso null porque no tengo un mapStateToProps y va primero\nexport default connect(mapStateToProps, mapDispatchToProps )(CreateProject) ","export const createProject= (project)=>{\n    return (dispatch, getState,{ getFirebase, getFirestore })=>{\n        //make a call async to DataBase\n        const firestore= getFirestore();\n        const profile= getState().firebase.profile;\n        const userID= getState().firebase.auth.uid;\n\n        firestore.collection('projects').add({\n\n            title: project.title,\n            content: project.content,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: userID,\n            createdAt: new Date(),\n        }).then(\n            ()=> {\n                dispatch({type:'CREATE_PROJECT', project: project});\n            }\n        ).catch((err)=>{\n            dispatch({type: 'CREATE_PROJECT_ERROR', err:err});\n        });\n        \n    }\n}","import React, { Component } from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport NavBar from './components/layout/NavBar';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignUp from './components/auth/SignUp';\nimport SignIn from './components/auth/SigIn';\nimport CreateProject from './components/projects/CreateProject';\n\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <NavBar />\n          <Switch>\n            <Route exact path=\"/\" component={Dashboard} />\n            <Route path=\"/project/:id\" component={ProjectDetails} />\n            <Route path=\"/signin\" component={SignIn} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/create\" component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState={\n    authError: null\n}\n\nconst authReducer= (state= initState, action)=> {\n    switch(action.type){\n        case 'LOGIN_ERROR': console.log('login error');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS': console.log('login success');\n            return{\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS': console.log('Sign out sucess');\n            return state;\n        case 'SIGNUP_SUCCESS': console.log('Signup succes');\n            return{\n                ...state,\n                authError: null\n            };\n        case 'SIGNUP_ERROR': console.log(action.err);\n        return {\n            ...state,\n            authError: action.err.message\n        }; \n        default: return state;\n    }\n}\n\nexport default authReducer","const initState={\n    projects:[\n        {id: '1', title:'Sonic The Hedgehog', content: 'Sonic the Hedgehog' },\n        {id: '2', title:'Sonic and Tails', content: 'Sonic the Hedgehog' },\n        {id: '3', title:'Sonic and Knuckles', content: 'Sonic the Hedgehog' }\n    ]\n}\n\nconst projectReducer= (state= initState, action)=> {\n    switch(action.type){\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n        }\n}\n\nexport default projectReducer","import authReducer from './authReducer';\nimport projectReducer from './projectReducer';\nimport { combineReducers } from 'redux';\nimport { firestoreReducer } from 'redux-firestore';\nimport { firebaseReducer } from 'react-redux-firebase';\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer,\n})\n\nexport default rootReducer;","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Initialize firebase\n\n\nvar config = {\n    apiKey: \"AIzaSyBheX7RGyvEm4QLESs5S9WxYTBRhQcmwTQ\",\n    authDomain: \"react-redux-firebase-braian.firebaseapp.com\",\n    databaseURL: \"https://react-redux-firebase-braian.firebaseio.com\",\n    projectId: \"react-redux-firebase-braian\",\n    storageBucket: \"react-redux-firebase-braian.appspot.com\",\n    messagingSenderId: \"1093748330955\",\n    appId: \"1:1093748330955:web:d2386cbdfff399572da64e\"\n};\n\nfirebase.initializeApp(config);\nfirebase.firestore();\n\nexport default firebase; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux';\nimport rootReducer from './store/reducers/rootReducer';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig';\n\nconst store = createStore(\n  rootReducer, \n  compose(\n    applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),\n    reduxFirestore(fbConfig),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile:true, userProfile: 'users', attachAuthIsReady: true})\n  )\n  );\n\nstore.firebaseAuthIsReady.then(\n  ()=>{\n      ReactDOM.render(\n        <Provider store={store} >\n          <App />\n        </Provider>,\n      document.getElementById('root')\n    );\n  }\n)\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}